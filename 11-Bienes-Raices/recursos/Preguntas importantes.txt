https://www.udemy.com/course/desarrollo-web-completo-con-html5-css3-js-php-y-mysql/learn/#questions/16252039
Animación al desaparecer la navegación en versión mobile
0 votos
José Miguel · Clase 283
· hace 2 horas

{Editado: Después de investigar un poco di con la solución}

{Editado de nuevo: He conseguido eliminar la solapación del menú al redimensionar la ventana}

Cuando se reduce la pantalla, el menú de navegación se pone en horizontal y va desapareciendo durante medio segundo. Eso provoca que, durante medio segundo se vea la barra de navegación cuando no se tenía que ver. Además, se solapa con el texto de "Venta de Casas...".

¿Hay alguna manera de evitar ese desagradable efecto? El proyecto está quedando verdaderamente genial, y este pequeño detallito le resta un poco de UX.

{Solución:}

La solución que se me ha ocurrido, y funciona, es la siguiente:

Primero, en el fichero navegacion.scss se añade una clase:

    // _navegacion.scss
    .alturaTemporal {
        height: auto;
    }

Ahora, en el fichero app.js se añade otra función:

    // app.js
    /**
     * Función que añade a un elemento una clase temporalmente durante
     * el tiempo pasado por parámetro
     * 
     * @param {*} element       Nodo del DOM al que añadir la clase
     * @param {*} className     Nombre de la clase a añadir
     * @param {*} time          Tiempo que tiene que estar añadida la clase
     */
    function temporaryClass ( element, className, time ) {
        element.classList.add(className);
        setTimeout(() => {
            element.classList.remove(className);
        }, time);
    }

Y se modifica la función navegacionResponsive para añadir la nueva función:

    // app.js
    function navegacionResponsive() {
        const navegacion = document.querySelector('.navegacion');
        if(navegacion.classList.contains('mostrar')) {
            navegacion.classList.remove('mostrar');
            temporaryClass(navegacion, 'alturaTemporal', 500);
        } else {
            navegacion.classList.add('mostrar');
        }
    }

Con esta nueva función le añadimos temporalmente una clase para que navegación tenga un 'height: auto' mientras desaparece el menú, y una vez que desaparece, o sea, después de medio segundo, le quita esa clase temporal. Hice también pruebas modificando el atributo height de .navegacion, pero no funcionó.

En móviles funciona perfectamente, cuando el móvil está en posición vertical, el menú se muestra y oculta correctamente. Si estando el menú mostrado se gira a horizontal, muestra el menú de nuevo horizontal, y al volver a girarlo sigue el menú desplegado.

Aún queda el pequeño detalle de que si redimensionamos el navegador, al pasar a anchura de móvil se muestra temporalmente el menú vertical desapareciendo y solapado con el título. En el móvil no se solapa, pues aparece directamente invisible.

Es de esperar que el usuario no base su trabajo en redimensionar el navegador para ver como cambia el responsive, pero si se pudiera solucionar también ese pequeño detalle, se ganaría mucho en UX

{Solución al redimensionado de ventana}

Primero creamos una clase que oculte el elemento al que pertenece. Como era importante que anulara la transición, le añadí un display. Como dijo el profesor en la clase, no se puede aplicar una transición a un display.

    // _navegacion.scss
    .visibilidadTemporal {
        display: none;
    }

Ahora pasamos al javascript. Ha quedado un pelín complejo, pero el resultado funciona.

Primero añadimos una variable global al principio del fichero app.js

    // app.js, hay que ponerla al principio del fichero, fuera de toda función
    let oldSize = window.innerWidth;

Creamos una función que compruebe si el cambio de tamaño del navegador está disminuyendo o aumentando

    // app.js
    function cambioTamano() {
        const navegacion = document.querySelector('.navegacion');
        let newSize = window.innerWidth;
        if( newSize <= 768 && newSize < oldSize && !navegacion.classList.contains('mostrar')) {
            temporaryClass(navegacion, 'visibilidadTemporal', 500);
        } 
        oldSize = newSize;
    }

Como se ve, se realiza una triple comprobación, primero, si el nuevo tamaño de la ventana es menor que 768, que es el tamaño que hemos establecido para que cambie a vista de teléfono, si el tamaño es mayor, ya no comprueba el resto de condiciones, aumentando el rendimiento. La segunda condición comprueba si la ventana está disminuyendo de tamaño, si estuviera aumentando, no tiene que aplicarse la ocultación. La tercera condición comprueba si el elemento navegación contiene la clase mostrar, pues si la contuviera, tampoco se debe ocultar.

Si se cumplen todas las condiciones, aplica la clase visibilidadTemporal durante 500 milisegundos, el tiempo de la transición. Por último, asignamos a oldSize el nuevo tamaño de la ventana para la siguiente comprobación.

Una vez creada la función cambioTamano, solo queda asignarle un eventListener

    // app.js
    function eventListeners() {
        const mobileMenu = document.querySelector('.mobile-menu');
     
        mobileMenu.addEventListener('click', navegacionResponsive);
        // Detecta el cambio de tamaño del navegador
        window.addEventListener('resize', cambioTamano);
    }

Aparentemente ya se han solucionado todos los problemas visuales con la transición del menú de navegación, pero no, cuando se refresca la pantalla, vuelve a aparecer el solapamiento del menú, si la ventana está en tamaño teléfono, pero ya voy a dejarlo ahí, si alguien tiene una solución a eso, que la exponga aquí.